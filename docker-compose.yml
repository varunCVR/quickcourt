version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: quickcourt_postgres
    environment:
      POSTGRES_DB: quickcourt_db
      POSTGRES_USER: quickcourt_user
      POSTGRES_PASSWORD: quickcourt_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - quickcourt_network
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: quickcourt_redis
    ports:
      - "6379:6379"
    networks:
      - quickcourt_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: quickcourt_backend
    environment:
      NODE_ENV: development
      PORT: 8000
      DATABASE_URL: postgresql://quickcourt_user:quickcourt_password@postgres:5432/quickcourt_db
      REDIS_URL: redis://redis:6379
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - quickcourt_network
    restart: unless-stopped
    command: npm run dev

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: quickcourt_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - quickcourt_network
    restart: unless-stopped
    command: npm run dev

volumes:
  postgres_data:

networks:
  quickcourt_network:
    driver: bridge
